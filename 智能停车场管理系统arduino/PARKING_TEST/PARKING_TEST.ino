0x21,0x24,0x21,0x24,0x22,0x24,0x3A,0x44,0xE4,0x44,0x48,0x84,0x01,0x28,0x02,0x10,/*"场",2*/

0x07,0x02,0x78,0x02,0x08,0x02,0xFF,0x82,0x2A,0x12,0x2A,0x92,0xEB,0x12,0x2A,0x92,
0x6A,0x92,0xA9,0x92,0x1C,0x12,0x2A,0x12,0x49,0x02,0x88,0x82,0x08,0x0A,0x08,0x04,/*"剩",3*/

0x01,0x00,0x01,0x00,0x02,0x80,0x04,0x40,0x08,0x20,0x10,0x10,0x2F,0xE8,0xC1,0x06,
0x01,0x00,0x3F,0xF8,0x01,0x00,0x11,0x10,0x11,0x08,0x21,0x04,0x45,0x04,0x02,0x00/*"余",4*/

};

static const uint8_t PROGMEM End_16x16[] = {
0x01,0x00,0x01,0x00,0x02,0x80,0x04,0x40,0x08,0x20,0x10,0x10,0x21,0x08,0xC1,0x06,
0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,/*"个",7*/

0x02,0x00,0x02,0x00,0x02,0x00,0x7F,0xFC,0x04,0x00,0x09,0x00,0x11,0x00,0x21,0x00,
0x3F,0xF8,0x01,0x00,0x01,0x00,0xFF,0xFE,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,/*"车",8*/

0x08,0x80,0x08,0x40,0x08,0x40,0x10,0x00,0x17,0xFC,0x30,0x00,0x30,0x08,0x52,0x08,
0x92,0x08,0x11,0x10,0x11,0x10,0x11,0x10,0x11,0x20,0x10,0x20,0x1F,0xFE,0x10,0x00/*"位",9*/
};

void setup()
{ 
  pinMode(LedPin, OUTPUT);
  Serial.begin(9600); 
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3D (for the 128x64)  
}

void cut(String message)
{
  commaPosition = message.indexOf(',');
  totalcarnum=message.substring(0,commaPosition).toInt();
  message = message.substring(commaPosition+1, message.length());
  totalcarA=message.substring(0,commaPosition).toInt();
  totalcarB=message.toInt();
  Serial.print(totalcarnum);
}
void choose(int num)
{
  a=(int)num/10;
  c=num%10;
  switch(a){
    case 1: display.drawBitmap(0,16,one_16x8,8,16,WHITE);break;
    case 0: display.drawBitmap(0,16,zero_16x8,8,16,WHITE);break;
    default:break;
  }
  switch(c){
    case 1: display.drawBitmap(16,16,one_16x8,8,16,WHITE);break;
    case 2: display.drawBitmap(16,16,two_16x8,8,16,WHITE);break;
    case 3: display.drawBitmap(16,16,three_16x8,8,16,WHITE);break;
    case 4: display.drawBitmap(16,16,four_16x8,8,16,WHITE);break;
    case 5: display.drawBitmap(16,16,five_16x8,8,16,WHITE);break;
    case 6: display.drawBitmap(16,16,six_16x8,8,16,WHITE);break;
    case 7: display.drawBitmap(16,16,seven_16x8,8,16,WHITE);break;
    case 8: display.drawBitmap(16,16,eight_16x8,8,16,WHITE);break;
    case 9: display.drawBitmap(16,16,nine_16x8,8,16,WHITE);break;
    case 0: display.drawBitmap(16,16,zero_16x8,8,16,WHITE);break;
    default:break;
  }
}

void test_SSD1306(void){
  display.clearDisplay();
  
  display.ShowCN_16(0,0, First_16x16,sizeof(First_16x16)/32,WHITE);
  display.ShowCN_16(32,16,End_16x16,sizeof(End_16x16)/32,WHITE);
  choose(totalcarnum);
  display.display();
}

void loop()
{ 
    String receiveVal="";
    test_SSD1306();
    while (Serial.available() > 0)  
    {
        receiveVal += char(Serial.read());
        delay(2);
    }
    if (receiveVal.length() > 0)
    {
       if(receiveVal == "1")    
          ledState = 1;   
       else if(receiveVal =="0")
          ledState = 0; 
       else 
       { 
         cut(receiveVal);
         test_SSD1306();
       }
    }
    digitalWrite(LedPin, ledState); 
    delay(50);        
} 
